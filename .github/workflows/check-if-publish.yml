# Check on every push to main branch. If version in package.json is different from the last commit,
# then create a release with the new version.
# If no tags existed before, create the release anyway.
name: Check if publish
on:
  workflow_dispatch:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.compare.outputs.should_publish }}
      version: ${{ steps.current_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Delete local tags
        run: git tag -d $(git tag -l)
      - name: Fetch remote tags
        run: git fetch --tags
      - name: List tags
        run: git tag -l
      - name: what!
        run: git describe --tags $(git rev-list --tags --max-count=1)
      - name: Get the latest tag
        id: latest_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Get the current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Compare versions
        id: compare
        run: echo "should_publish=$(node -p "process.env.INPUT_VERSION != process.env.INPUT_TAG")" >> $GITHUB_OUTPUT
        env:
          INPUT_VERSION: ${{ steps.current_version.outputs.version }}
          INPUT_TAG: ${{ steps.latest_tag.outputs.tag }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.should_publish == 'true'
    steps:
      - run: echo ${{ needs.check.outputs.version }}, ${{ needs.check.outputs.should_publish }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
      - name: Build
        run: npm run build:clean
      - name: Publish
        run: npm publish
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            dist
            package.json
            README.MD
